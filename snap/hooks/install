#!/bin/sh

mkdir "$SNAP_DATA/mysql"
printf "Made the directory\n"
printf "Socket var: "
echo $MYSQL_SOCKET
printf "\n"
root_option_file="$SNAP_DATA/mysql/root.ini"

# Generate a password for the root mysql user.
printf "Generating root mysql password... "
root_password="$(tr -dc _A-Z-a-z-0-9 < /dev/urandom | head -c64)"
printf "done\n"

# Generate a password for the mattermost mysql user.
printf "Generating mattermost mysql password... "
mattermost_password="$(tr -dc _A-Z-a-z-0-9 < /dev/urandom | head -c64)"
printf "done\n"

# Save root user information
cat <<-EOF > "$root_option_file"
  [client]
  socket=$MYSQL_SOCKET
  user=root
EOF
chmod 600 "$root_option_file"

# Now set everything up in one step:
# 1) Set the root user's password
# 2) Create the mattermost user
# 3) Create the mattermost database
# 4) Grant the mattermost user privileges on the mattermost database
printf "Setting up users and mattermost database... "
if mysql --defaults-file="$root_option_file" <<-SQL
  ALTER USER 'root'@'localhost' IDENTIFIED BY '$root_password';
  CREATE USER 'mmuser'@'%' IDENTIFIED BY '$mattermost_password';
  CREATE DATABASE mattermost;
  GRANT ALL PRIVILEGES ON mattermost.* TO 'mmuser'@'%' IDENTIFIED BY '$mattermost_password';
SQL
then
  # Now the root mysql user has a password. Save that as well.
  echo "password=$root_password" >> "$root_option_file"
  printf "done\n"
else
  echo "Failed to initialize-- reverting..."
  "$SNAP/support-files/mysql.server" stop
  rm -rf "$SNAP_DATA"/mysql/*
fi
